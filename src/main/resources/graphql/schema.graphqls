# Chambre Type and Queries
type Chambre {
    id: ID!
    type: String!
    prix: Float!
    disponible: Boolean!
    reservations: [Reservation!]!
}

type Query {
    chambres: [Chambre!]!
    chambre(id: ID!): Chambre
}

type Mutation {
    createChambre(type: String!, prix: Float!, disponible: Boolean!): Chambre!
    updateChambre(id: ID!, type: String, prix: Float, disponible: Boolean): Chambre!
    deleteChambre(id: ID!): Boolean!
}

# Client Type and Queries
type Client {
    id: ID!
    nom: String!
    prenom: String!
    email: String!
    telephone: String!
    reservations: [Reservation!]!
}

extend type Query {
    clients: [Client!]!
    client(id: ID!): Client
}

extend type Mutation {
    createClient(nom: String!, prenom: String!, email: String!, telephone: String!): Client!
    updateClient(id: ID!, nom: String, prenom: String, email: String, telephone: String): Client!
    deleteClient(id: ID!): Boolean!
}

# Reservation Type and Queries
type Reservation {
    id: ID!
    client: Client!
    chambre: Chambre!
    dateDebut: String!
    dateFin: String!
    preferences: String
}

extend type Query {
    reservations: [Reservation!]!
    reservation(id: ID!): Reservation
    reservationsForClient(clientId: ID!): [Reservation!]!
    reservationsForChambre(chambreId: ID!): [Reservation!]!
}

extend type Mutation {
    createReservation(clientId: ID!, chambreId: ID!, dateDebut: String!, dateFin: String!, preferences: String): Reservation!
    updateReservation(id: ID!, clientId: ID, chambreId: ID, dateDebut: String, dateFin: String, preferences: String): Reservation!
    deleteReservation(id: ID!): Boolean!
}

